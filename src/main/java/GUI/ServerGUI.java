/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import Controller.Server;
import Controller.ServerThread;
import DAL.UserDAL;
import Model.Room;
import Model.User;
import com.formdev.flatlaf.FlatLightLaf;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author duyph
 */
public class ServerGUI extends javax.swing.JFrame implements Runnable {

    /**
     * Creates new form ServerGUI
     */
    private UserDAL userDal = new UserDAL();
    private int id;
    private DefaultTableModel modelUser;
    private DefaultTableModel modelRoom;

    public ServerGUI() {
        this.id = 0;

        try {
            UIManager.setLookAndFeel(new FlatLightLaf());
            initComponents();
            modelUser = (DefaultTableModel) tblUser.getModel();
           // modelRoom = (DefaultTableModel) tblRoom.getModel();
            TimerTask timerTask = new TimerTask() {
                @Override
                public void run() {
                    setInfo();
                    showUser();
                    //showRoom();
                }
            };
            long delay = 1000L;
            Timer timer = new Timer("Timer");
            timer.schedule(timerTask, 100, delay);
        } catch (UnsupportedLookAndFeelException ex) {
            JOptionPane.showMessageDialog(rootPane, "Something wrong!!!", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Main = new javax.swing.JPanel();
        lblThread = new javax.swing.JLabel();
        numThread = new javax.swing.JLabel();
        lblUser = new javax.swing.JLabel();
        numUser = new javax.swing.JLabel();
        TabbedPane = new javax.swing.JTabbedPane();
        User = new javax.swing.JPanel();
        btnBlock = new javax.swing.JButton();
        btnUnblock = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUser = new javax.swing.JTable();
        Room = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblRoom = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        lblThread.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        lblThread.setText("NUMBER OF ACTIVE THREADS: ");

        numThread.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        numThread.setText("#");

        lblUser.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        lblUser.setText("NUMBER OF ONLINE USER: ");

        numUser.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        numUser.setText("#");

        btnBlock.setText("Block");
        btnBlock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBlock(evt);
            }
        });

        btnUnblock.setText("Unblock");
        btnUnblock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUnblockActionPerformed(evt);
            }
        });

        tblUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "UserID", "UserName", "Status", "IsBlocked"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblUserMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblUser);

        javax.swing.GroupLayout UserLayout = new javax.swing.GroupLayout(User);
        User.setLayout(UserLayout);
        UserLayout.setHorizontalGroup(
            UserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, UserLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(UserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnUnblock, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnBlock, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        UserLayout.setVerticalGroup(
            UserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(UserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(UserLayout.createSequentialGroup()
                        .addGap(0, 120, Short.MAX_VALUE)
                        .addComponent(btnBlock)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUnblock)))
                .addContainerGap())
        );

        TabbedPane.addTab("", User);

        tblRoom.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "RoomID", "UserID", "OpponentID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblRoom);
        if (tblRoom.getColumnModel().getColumnCount() > 0) {
            tblRoom.getColumnModel().getColumn(0).setHeaderValue("RoomID");
            tblRoom.getColumnModel().getColumn(1).setHeaderValue("UserID");
            tblRoom.getColumnModel().getColumn(2).setHeaderValue("OpponentID");
        }

        javax.swing.GroupLayout RoomLayout = new javax.swing.GroupLayout(Room);
        Room.setLayout(RoomLayout);
        RoomLayout.setHorizontalGroup(
            RoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RoomLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE)
                .addContainerGap())
        );
        RoomLayout.setVerticalGroup(
            RoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
        );

        TabbedPane.addTab(" ", Room);

        javax.swing.GroupLayout MainLayout = new javax.swing.GroupLayout(Main);
        Main.setLayout(MainLayout);
        MainLayout.setHorizontalGroup(
            MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TabbedPane)
                    .addGroup(MainLayout.createSequentialGroup()
                        .addGroup(MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblThread)
                            .addComponent(lblUser))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(numThread, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(numUser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        MainLayout.setVerticalGroup(
            MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(numThread, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblThread, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(13, 13, 13)
                .addGroup(MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUser)
                    .addComponent(numUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(TabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tblUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUserMouseClicked
        // TODO add your handling code here:
        int i = tblUser.getSelectedRow();
        id = Integer.parseInt(tblUser.getValueAt(i, 0).toString());
    }//GEN-LAST:event_tblUserMouseClicked

    private void btnUnblockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUnblockActionPerformed
        // TODO add your handling code here:
        if (id == 0) {
            JOptionPane.showMessageDialog(rootPane, "Select the user you want to unblock first!!!", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                if (userDal.unblockUser(id) == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Success!!!");
                    showUser();
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Something wrong!!!", "Error", JOptionPane.ERROR_MESSAGE);
                }
                showUser();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Something wrong!!!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnUnblockActionPerformed

    private void btnBlock(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBlock
        // TODO add your handling code here:
        if (id == 0) {
            JOptionPane.showMessageDialog(rootPane, "Select the user you want to block first!!!", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                if (userDal.blockUser(id) == 1) {
                    JOptionPane.showMessageDialog(rootPane, "Success!!!");
                    showUser();
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Something wrong!!!", "Error", JOptionPane.ERROR_MESSAGE);
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Something wrong!!!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnBlock

    private void showUser() {
        try {
            modelUser.setRowCount(0);
            ArrayList<User> list = userDal.loadUser();
            for (User us : list) {
                modelUser.addRow(new Object[]{
                    us.getUserId(), us.getUserName(), us.getStatus(), us.getIsBlocked()
                });
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Something wrong!!!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void showRoom() {
        try {
            modelRoom.setRowCount(0);
            for (ServerThread serverThread : Server.clientList) {
                Room room = serverThread.getRoom();
                if (room != null) {
                    if (room.getNumberOfUser() == 1) {
                        modelRoom.addRow(new Object[]{
                            room.getID(), room.getUser1().getUser().getUserId()
                        });
                    } else {
                        modelRoom.addRow(new Object[]{
                            room.getID(), room.getUser1().getUser().getUserId(), room.getUser2().getUser().getUserId()
                        });
                    }
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Something wrong!!!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void setInfo() {
        try {
            numThread.setText(String.valueOf(Server.clientList.size()));
            List list = userDal.listUserOnline();
            numUser.setText(String.valueOf(list.size()));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Something wrong!!!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Main;
    private javax.swing.JPanel Room;
    private javax.swing.JTabbedPane TabbedPane;
    private javax.swing.JPanel User;
    private javax.swing.JButton btnBlock;
    private javax.swing.JButton btnUnblock;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblThread;
    private javax.swing.JLabel lblUser;
    private javax.swing.JLabel numThread;
    private javax.swing.JLabel numUser;
    private javax.swing.JTable tblRoom;
    private javax.swing.JTable tblUser;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        new ServerGUI().setVisible(true);
    }
}
